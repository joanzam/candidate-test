/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* generator = "nMigen" *)
(* top =  1  *)
(* \nmigen.hierarchy  = "top" *)
module top(dat_r, dat_w, we, clk, rst, adr);
  (* src = "generate.py:9" *)
  input [3:0] adr;
  (* src = "/home/jzamora/.local/lib/python3.8/site-packages/nmigen/hdl/ir.py:526" *)
  input clk;
  (* src = "generate.py:10" *)
  output [7:0] dat_r;
  reg [7:0] dat_r;
  (* src = "generate.py:11" *)
  input [7:0] dat_w;
  (* src = "generate.py:17" *)
  reg [3:0] mem_r_addr;
  (* src = "generate.py:17" *)
  wire [7:0] mem_r_data;
  (* src = "generate.py:18" *)
  reg [3:0] mem_w_addr;
  (* src = "generate.py:18" *)
  reg [7:0] mem_w_data;
  (* src = "generate.py:18" *)
  reg mem_w_en;
  (* src = "/home/jzamora/.local/lib/python3.8/site-packages/nmigen/hdl/ir.py:526" *)
  input rst;
  (* src = "generate.py:12" *)
  input we;
  reg [7:0] mem [15:0];
  initial begin
    mem[0] = 8'hce;
    mem[1] = 8'h20;
    mem[2] = 8'h21;
    mem[3] = 8'h6c;
    mem[4] = 8'h87;
    mem[5] = 8'h4a;
    mem[6] = 8'h30;
    mem[7] = 8'h84;
    mem[8] = 8'h8e;
    mem[9] = 8'h7d;
    mem[10] = 8'h92;
    mem[11] = 8'h3b;
    mem[12] = 8'ha1;
    mem[13] = 8'h42;
    mem[14] = 8'hdd;
    mem[15] = 8'hc7;
  end
  reg [3:0] _0_;
  always @(posedge clk) begin
    _0_ <= mem_r_addr;
    if (mem_w_en) mem[mem_w_addr] <= mem_w_data;
  end
  assign mem_r_data = mem[_0_];
  always @* begin
    mem_r_addr = 4'h0;
    mem_r_addr = adr;
  end
  always @* begin
    dat_r = 8'h00;
    dat_r = mem_r_data;
  end
  always @* begin
    mem_w_addr = 4'h0;
    mem_w_addr = adr;
  end
  always @* begin
    mem_w_data = 8'h00;
    mem_w_data = dat_w;
  end
  always @* begin
    mem_w_en = 1'h0;
    mem_w_en = we;
  end
endmodule
